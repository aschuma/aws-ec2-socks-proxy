#!/usr/bin/env python3
from loggerFactory import logger_factory

logger = logger_factory(__name__)

#---- PLEASE EDIT THE FOLLOWING LINES

# the name of the key in ~/.ssh/ e.g. "id_rsa"
AWSSOCKS_KEY = "my-whatever_rsa-key"

# the aws region, e.g for UK
AWSSOCKS_REGION = "eu-west-2"

# the ec2 instance size - nano should be sufficient
AWSSOCKS_EC2_INSTANCE_SIZE = "t3.nano"

# the ec2 architecture - "x86_64" or "amd64"
AWSSOCKS_EC2_ARCHITECTURE = "x86_64"

# the name of public key - the key will be managed by the scripts, so do not use an existing one
AWSSOCKS_KEY_NAME = "AWSSOCKS_KEY"

# the name of security group  - the security group will be managed by the scripts, so do not use an existing one
AWSSOCKS_SECURITY_GROUP_NAME = "AWSSOCKS_SG"

# the duration in minutes after which the EC2 instance will terminate itself automatically;
# if the value is set to 0 or a negative number, the instance will not auto-terminate and 
# will require manual intervention for termination.
# 
# This is a BETA feature and should be used with caution.
AWSSOCKS_AUTO_TERMINATION_AFTER_MINUTES = -1

#---- KEEP THE CONTENT BELOW UNCHANGED


def log_configuration():
    logger.info("""
                            AWSSOCKS_KEY = {}
                         AWSSOCKS_REGION = {}
              AWSSOCKS_EC2_INSTANCE_SIZE = {}
               AWSSOCKS_EC2_ARCHITECTURE = {}
                       AWSSOCKS_KEY_NAME = {}
            AWSSOCKS_SECURITY_GROUP_NAME = {}
 AWSSOCKS_AUTO_TERMINATION_AFTER_MINUTES = {} (BETA feature)
    """.format(AWSSOCKS_KEY, AWSSOCKS_REGION, AWSSOCKS_EC2_INSTANCE_SIZE, AWSSOCKS_EC2_ARCHITECTURE, 
               AWSSOCKS_KEY_NAME, AWSSOCKS_SECURITY_GROUP_NAME, AWSSOCKS_AUTO_TERMINATION_AFTER_MINUTES))


if __name__ == '__main__':
    log_configuration()
